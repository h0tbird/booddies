#!/bin/bash

#------------------------------------------------------------------------------
# Globals:
#------------------------------------------------------------------------------

# Settings:
readonly REGISTRY='regi01:5000'

# Return codes:
readonly E_BAD_CMD=10
readonly E_BAD_CONF=11
readonly E_BAD_PULL=12
readonly E_BAD_TAG=13
readonly E_BAD_PUSH=14
readonly E_BAD_PURGE=15

# Commands:
readonly CMD_CURL=$(type -P curl); [ -z "${CMD_CURL}" ] && exit ${E_BAD_CMD}
readonly CMD_DOCKER=$(type -P docker); [ -z "${CMD_DOCKER}" ] && exit ${E_BAD_CMD}
readonly CMD_JQ=$(type -P jq); [ -z "${CMD_JQ}" ] && exit ${E_BAD_CMD}

#------------------------------------------------------------------------------
# Source and verify the configuration:
#------------------------------------------------------------------------------

[ -f /etc/booddies/regi.conf ] && \
  source /etc/booddies/regi.conf || exit ${E_BAD_CONF}

[ -z "${LOG_FILE}" ] && echo 'Ops! LOG_FILE is not set' && exit ${E_BAD_CONF}
[ -z "${IMAGES}" ] && echo 'Ops! IMAGES is not set' && exit ${E_BAD_CONF}

#------------------------------------------------------------------------------
# Source miscellaneous bash functions:
#------------------------------------------------------------------------------

[ -f booddies.sh ] && source booddies.sh
[ -f ./bin/booddies.sh ] && source ./bin/booddies.sh
[ -f /etc/booddies/booddies.sh ] && source /etc/booddies/booddies.sh

#------------------------------------------------------------------------------
# Seek, pull, tag, push and purge:
#------------------------------------------------------------------------------

for IMG in ${IMAGES}; do

  #-------
  # Seek:
  #-------

  NAME=${IMG%%:*}; TAG=${IMG#*:}
  MSG="Seeking '${IMG}' private image..."
  misc::stat_busy "${MSG}"

  if ${CMD_CURL} -sX GET \
  http://${REGISTRY}/v2/${NAME}/tags/list | \
  ${CMD_JQ} ".tags | contains([\"${TAG}\"])" 2> /dev/null | \
  grep -q 'true'; then
    misc::stat_done
    continue
  else
    misc::stat_done
  fi

  #-------
  # Pull:
  #-------

  MSG="Pulling '${IMG}' image..."
  misc::stat_busy "${MSG}"

  if ! ${CMD_DOCKER} pull ${IMG} >> ${LOG_FILE}; then
    misc::log "[ERROR] ${MSG}"
    misc::stat_fail
    exit "${E_BAD_PULL}"
  else
    misc::stat_done
  fi

  #------
  # Tag:
  #------

  MSG="Tagging '${IMG}' image..."
  misc::stat_busy "${MSG}"

  if ! ${CMD_DOCKER} tag -f ${IMG} ${REGISTRY}/${IMG} >> ${LOG_FILE}; then
    misc::log "[ERROR] ${MSG}"
    misc::stat_fail
    exit "${E_BAD_TAG}"
  else
    misc::stat_done
  fi

  #-------
  # Push:
  #-------

  MSG="Pushing '${REGISTRY}/${IMG}' image..."
  misc::stat_busy "${MSG}"

  if ! ${CMD_DOCKER} push ${REGISTRY}/${IMG} >> ${LOG_FILE}; then
    misc::log "[ERROR] ${MSG}"
    misc::stat_fail
    exit "${E_BAD_PUSH}"
  else
    misc::stat_done
  fi

  #--------
  # Purge:
  #--------

  MSG="Purging '${IMG}' local image..."
  misc::stat_busy "${MSG}"

  if ! ${CMD_DOCKER} rmi ${IMG} ${REGISTRY}/${IMG} >> ${LOG_FILE}; then
    misc::log "[ERROR] ${MSG}"
    misc::stat_fail
    exit "${E_BAD_PURGE}"
  else
    misc::stat_done
  fi

done

# vim: set syntax=sh expandtab tabstop=2:
