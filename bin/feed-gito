#!/bin/bash

#------------------------------------------------------------------------------
# Globals:
#------------------------------------------------------------------------------

# Return codes:
readonly E_BAD_CMD=10
readonly E_BAD_SYNC=11

# Commands:
readonly CMD_DOCKER=$(type -P docker); [ -z "${CMD_DOCKER}" ] && exit ${E_BAD_CMD}

#------------------------------------------------------------------------------
# Source and verify the configuration:
#------------------------------------------------------------------------------

[ -f /etc/booddies/gito.conf ] && \
  source /etc/booddies/gito.conf || ${E_BAD_CONF}

[[ -z "${!REPOS[@]}" ]] && echo 'Ops! REPOS is not set' && exit ${E_BAD_CONF}

#-----------------------------------------------------------------------------
# Source miscellaneous bash functions:
#-----------------------------------------------------------------------------

[ -f booddies.sh ] && source booddies.sh
[ -f ./bin/booddies.sh ] && source ./bin/booddies.sh
[ -f /etc/booddies/booddies.sh ] && source /etc/booddies/booddies.sh

#----------------------------------------------------------------------------
# Fork all repositories:
#----------------------------------------------------------------------------

IFS=','; for REPO in "${!REPOS[@]}"; do

  read -a array <<< "${REPOS["$REPO"]}"

  DESC=${array[0]}
  CATE=${array[1]}
  MIRR=${array[2]}
  NAME=${array[3]}

  MSG="Synchronizing '${REPO}'..."
  misc::stat_busy "${MSG}"

  if ! ${CMD_DOCKER} exec -it gito01 gitosync \
  --admin admin \
  --owner 'The bootstrapping fellowship' \
  --description \'${DESC}\' \
  --category \'${CATE}\' \
  --repo "${REPO}" \
  --mirror "${MIRR}" \
  --name "${NAME}" >> ${LOG_FILE}; then
    misc::log "[ERROR] ${MSG}"
    misc::stat_fail
    exit "${E_BAD_SYNC}"
  else
    misc::stat_done
  fi

done
