#!/bin/bash

#------------------------------------------------------------------------------
# Globals:
#------------------------------------------------------------------------------

# Settings:
declare -rA REPOS=(
['https://github.com/h0tbird/puppet-config.git']='Puppet config repository','Configurations','true'
['https://github.com/h0tbird/coreos-mesos.git']='Mesos config repository','Configurations','true'
['https://github.com/h0tbird/r10k-kvm.git']='KVM control repository','R10K','true'
['https://github.com/h0tbird/puppet-r_kvm.git']='Puppet KVM role repository','Puppet roles','true'
['https://github.com/h0tbird/puppet-r_base.git']='Puppet base role repository','Puppet roles','true'
['https://github.com/h0tbird/puppet-p_ssh.git']='Puppet ssh profile repository','Puppet profiles','true'
['https://github.com/h0tbird/puppet-m_misclib.git']='Puppet misclib module repository','Puppet modules','true'
['https://github.com/h0tbird/puppet-m_users.git']='Puppet users module repository','Puppet modules','true'
['https://github.com/h0tbird/puppet-m_ssh.git']='Puppet ssh module repository','Puppet modules','true'
['https://github.com/h0tbird/puppet-m_terminfo.git']='Puppet terminfo module repository','Puppet modules','true'
['https://github.com/puppetlabs/puppetlabs-stdlib.git']='Puppet stdlib module repository','Puppet modules','false','puppet-m_stdlib')
declare LOG_FILE='/tmp/booddies.log'

# Return codes:
readonly E_BAD_CMD=10
readonly E_BAD_SYNC=11

# Commands:
readonly CMD_DOCKER=$(type -P docker); [ -z "${CMD_DOCKER}" ] && exit ${E_BAD_CMD}

#-----------------------------------------------------------------------------
# Source miscellaneous bash functions:
#-----------------------------------------------------------------------------

[ -f booddies.sh ] && source booddies.sh
[ -f ./bin/booddies.sh ] && source ./bin/booddies.sh
[ -f /etc/booddies/booddies.sh ] && source /etc/booddies/booddies.sh

#----------------------------------------------------------------------------
# Fork all repositories:
#----------------------------------------------------------------------------

IFS=','; for repo in "${!REPOS[@]}"; do

  read -a array <<< "${REPOS["$repo"]}"

  desc=${array[0]}
  cat=${array[1]}
  mirror=${array[2]}
  name=${array[3]}

  msg="Synchronizing '${repo}'..."
  misc::stat_busy "${msg}"

  if ! ${CMD_DOCKER} exec -it gito01 gitosync \
  --admin admin \
  --owner 'The bootstrapping fellowship' \
  --description "${desc}" \
  --category "${cat}" \
  --repo "${repo}" \
  --mirror "${mirror}" \
  --name "${name}" >> ${LOG_FILE}; then
    misc::log "[ERROR] ${msg}"
    misc::stat_fail
    exit "${E_BAD_SYNC}"
  else
    misc::stat_done
  fi

done
